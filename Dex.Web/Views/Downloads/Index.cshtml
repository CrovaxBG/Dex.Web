@inject SignInManager<AspNetUsers> SignInManager
@using Dex.Common.Resources
@using Dex.DataAccess.Models
@using Microsoft.AspNetCore.Identity
@{
    Layout = "_Layout";
    var searchCriteria = (string)TempData["searchCriteria"];
}

<div class="title text-center col-md-10" style="margin: 0 auto;">
    <h1>
        Downloads
        <br/>
        <div class="vl-center" style="height: 280px;"></div>
    </h1>
    <div class="d-inline-block">
        <div class="float-left" style="width: 40%;">
            <h5>
                Here you can find my most of my projects. You can check out their source code, by clicking on the github icon or directly download an executable.
            </h5>
            <br/>
            <br/>
            <h5>
                You can set favorite apps using the star icon, this will subscribe you to any news concerning the application.
            </h5>
        </div>

        <div class="float-right" style="width: 40%;">
            <h5>
                Some of the apps are available for play directly through the web, scoreboards and matchmaking are cross-platform, meaning the desktop version can be paired with the web version.
            </h5>
            <br/>
            <br/>
            <h5>
                The account used to log in into this website, is also shared between all applications with authentication.
            </h5>
        </div>
    </div>
</div>

<br />

<div>
    <div class="float-left" style="margin-left: 45px;">
        <a id="sortAsc" class="selected-arrow">
            <i class="fa fa-arrow-up"></i>
        </a>
        <a id="sortDesc" class="unselected-arrow">
            <i class="fa fa-arrow-down"></i>
        </a>
        <div class="mainmenu">
            <ul id="sortCategories">
                <li>
                    <a href="#">
                        Sort
                        <i class="fa fa-long-arrow-down "></i>
                    </a>
                    <ul>
                        <li>
                            <a href="#" class="sort">Name</a>
                        </li>
                        <li>
                            <a href="#" class="sort">Date</a>
                        </li>
                        @if (SignInManager.IsSignedIn(User))
                        {
                            <li>
                                <a href="#" class="sort">Favorite</a>
                            </li>
                        }
                    </ul>
                </li>
            </ul>
        </div>
    </div>
    <div class="float-right" style="margin-right: 45px;">
        <input id="searchBar" class="form-control mr-sm-2" type="text" placeholder="Search project" aria-label="Search" value="@searchCriteria">
    </div>

</div>

<br />
<br />

<div id="projectsListDiv" class="box">
</div>

<div id="paginationListDiv" class="text-center">
</div>

@section Scripts{
    <script>
        $(document).ready(function () {
            if (window.sessionStorage.getItem('currentPage') === null) {
                initializePagingVariables();
            }
            var maxPages = 1;

            refreshProjectsList();
            updateSortArrows();

            $('#searchBar').on('input',
                delay(function () {
                    window.sessionStorage.setItem('searchCriteria', $('#searchBar').val());
                    window.sessionStorage.setItem('currentPage', 1); //reset pages

                    refreshProjectsList();
                },
                    100));

            $('#sortAsc').on('click',
                function () {
                    window.sessionStorage.setItem('currentPage', 1); //reset pages
                    window.sessionStorage.setItem('isAscending', true);

                    refreshProjectsList();
                    updateSortArrows();
                });

            $('#sortDesc').on('click',
                function () {
                    window.sessionStorage.setItem('currentPage', 1); //reset pages
                    window.sessionStorage.setItem('isAscending', false);

                    refreshProjectsList();
                    updateSortArrows();
                });

            $('#sortCategories').on('click', 'a.sort',
                function () {
                    window.sessionStorage.setItem('sort', $(this).text());
                    refreshProjectsList();
                });

            $('#paginationListDiv').on('click', 'a.page-navigator',
                function () {
                    var element = $(this);
                    var currentPage = parseInt(window.sessionStorage.getItem('currentPage'));
                    if (currentPage > 1 && element.attr('id') == 'previousPage') {
                        window.sessionStorage.setItem('currentPage', currentPage - 1);
                    } else if (currentPage < maxPages && element.attr('id') == 'nextPage') {
                        window.sessionStorage.setItem('currentPage', currentPage + 1);
                    } else if (element.attr('id').indexOf('page') >= 0) {
                        window.sessionStorage.setItem('currentPage', element.attr('id').substring('page'.length));
                    }

                    refreshProjectsList();
                });

            function refreshProjectsList() {
                var request = getProjectsAjax();
                loadProjectsFromAjax(request);
            }

            function getProjectsAjax() {
                return $.ajax({
                    url: '/Downloads/GetProjects',
                    method: 'GET',
                    accepts: 'text/json',
                    data: {
                        currentPage: window.sessionStorage.getItem('currentPage'),
                        searchCriteria: window.sessionStorage.getItem('searchCriteria'),
                        sort: window.sessionStorage.getItem('sort'),
                        isAscending: window.sessionStorage.getItem('isAscending')
                    },
                    headers: {
                        RequestVerificationToken:
                            $('input:hidden[name="__RequestVerificationToken"]').val()
                    }
                });
            }

            function ajaxFavorite(resourceName, projectId) {
                return $.ajax({
                    url: '/Downloads/' + resourceName,
                    method: 'GET',
                    accepts: 'text/json',
                    data: {
                        projectId: projectId
                    },
                    headers: {
                        RequestVerificationToken:
                            $('input:hidden[name="__RequestVerificationToken"]').val()
                    }
                });
            }

            function loadProjectsFromAjax(ajaxRequest) {
                ajaxRequest.done(function (data) {
                    if (data.items.length > 0) {
                        appendProjectItems(data.items);
                        appendPaginationItems(window.sessionStorage.getItem('currentPage'), data.maxPages);
                    } else {
                        loadNoResultView();
                    }
                });
            }

            document.addEventListener('click',
                function (e) {
                    if (hasClass(e.target, 'favoriteStar')) {
                        var resourceName = 'RemoveFavoriteProject';
                        if (hasClass(e.target, 'unchecked')) {
                            resourceName = 'SetFavoriteProject';
                        }

                        var classes = e.target.className.split(' ');
                        var projectId = 0;
                        var classPrefix = 'project-';
                        for (var i = 0; i < classes.length; i++) {
                            if (classes[i].indexOf(classPrefix) >= 0) {
                                projectId = classes[i].substring(classPrefix.length);
                                break;
                            }
                        }

                        var request = ajaxFavorite(resourceName, projectId);
                        request.fail(function (jqXHR) {
                            if (jqXHR.status === 401) {
                                $.growl.warning({ message: 'You need to be logged in to set favorites ' });
                            }
                        });

                        request.done(function (data) {
                            if (data.success) {
                                flipStarClasses(e.target);
                            }
                        });
                    }
                }, false);

            function appendProjectItems(data) {
                var list = $('<ul id="projectsList" class="text-center p-0">');
                $('#projectsListDiv').html(list);

                var promises = data.map(function (e) {
                    return new Promise(function (resolve) {
                        $.get('/Downloads/GetPartialProject',
                            { json: JSON.stringify(e) },
                            function (response) {
                                var htmlElement = '<li class="horizontal-li box faded-out">' + response + '</li>';
                                resolve(htmlElement);
                            });
                    });
                });

                Promise.all(promises).then(function (promiseResults) {
                    $('#projectsList').append(promiseResults);
                });

                list.append('</ul>');
                window.getComputedStyle(document.getElementById('projectsList')).opacity; //forces batch
            }

            function appendPaginationItems(currentPage, totalPages) {
                maxPages = totalPages;
                var list = $('<ul id="paginationListDiv" class="pagination">');
                list.append(
                    '<li><a href="#" id="previousPage" class="box faded-out page-navigator">«</a></li>');
                $('#paginationListDiv').html(list);
                for (var i = 1; i <= maxPages; i++) {
                    if (currentPage == i) {
                        list.append('<li><a href="#" id="page' +
                            i +
                            '" class="active box faded-out page-navigator"</a>' +
                            i +
                            '</li>');
                    } else {
                        list.append('<li><a href="#" id="page' +
                            i +
                            '"class="box faded-out page-navigator" </a>' +
                            i +
                            '</li>');
                    }
                }
                list.append(
                    '<li><a href="#" id="nextPage" class="box faded-out page-navigator">»</a></li>');
                list.append('</ul>');
            }

            function updateSortArrows() {
                if (window.sessionStorage.getItem('isAscending') === 'true') {
                    $('#sortAsc').removeClass('unselected-arrow');
                    $('#sortAsc').addClass('selected-arrow');
                    $('#sortDesc').removeClass('selected-arrow');
                    $('#sortDesc').addClass('unselected-arrow');
                } else {
                    $('#sortDesc').removeClass('unselected-arrow');
                    $('#sortDesc').addClass('selected-arrow');
                    $('#sortAsc').removeClass('selected-arrow');
                    $('#sortAsc').addClass('unselected-arrow');
                }
            }

            function loadNoResultView() {
                $.get('/Downloads/GetPartialNoResults',
                    function (response) {
                        $('#projectsListDiv').html(response);
                        $('#paginationListDiv').html('');
                    });
            }

            function initializePagingVariables() {
                window.sessionStorage.setItem('searchCriteria', $('#searchBar').val());
                window.sessionStorage.setItem('currentPage', 1);
                window.sessionStorage.setItem('sort', 'name');
                window.sessionStorage.setItem('isAscending', true);
            }

            function flipStarClasses(e) {
                if (hasClass(e, 'checked')) {
                    e.classList.remove("checked");
                    e.classList.remove("bounceIn");
                    e.classList.add("unchecked");
                } else {
                    e.classList.remove("unchecked");
                    e.classList.add("checked");
                    e.classList.add("bounceIn");
                }
            }
        });
    </script>
}